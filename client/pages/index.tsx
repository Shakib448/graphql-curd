import React, { useState } from "react";
import Head from "next/head";
import { useMutation } from "@apollo/client";

import { CREATE_USER } from "../src/Graphql/Mutation";
import Queries from "../src/Components/Queries";
import { GET_ALL_USERS } from "../src/Graphql/Queries";
import { client } from "./_app";

const Home = ({ data, dataLoading, dataError }) => {
  const [name, setName] = useState("");
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [createUser, { error, loading }] = useMutation(CREATE_USER);

  if (loading) return "Submitting...";
  if (error) return `Submission error! ${error.message}`;

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className="createUser">
          <input
            type="text"
            placeholder="name"
            onChange={(e) => setName(e.target.value)}
          />
          <input
            type="text"
            placeholder="username"
            onChange={(e) => setUsername(e.target.value)}
          />
          <input
            type="text"
            placeholder="password"
            onChange={(e) => setPassword(e.target.value)}
          />
          <button
            onClick={() =>
              createUser({
                variables: {
                  name: name,
                  username: username,
                  password: password,
                },
              })
            }
          >
            submit
          </button>
        </div>
        <Queries data={data} dataLoading={dataLoading} />
      </main>
    </div>
  );
};

export default Home;

export async function getStaticProps() {
  const { data, loading, error } = await client.query({
    query: GET_ALL_USERS,
  });

  return {
    props: {
      data: data.getAllUsers,
      dataLoading: loading,
    },
  };
}
